# -*- coding: utf-8 -*-
"""2번째 미니프로젝트 (7:3버전).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QEQvyeadQC18Yy1_ONi-ZGpdOiGgYSMn
"""

import pandas as pd
from sklearn.preprocessing import LabelEncoder

train = pd.read_csv('train (Netflix).csv')
test = pd.read_csv('test (Netflix).csv')

## EDA
print('========데이터 크기=====')
print(train.shape, test.shape)

print('\n=====데이터 정보====')
print(train.info())

print('\n======타겟 빈도수====')
print(train['churned'].value_counts())

# 전처리
target = train.pop('churned')

# Drop 'customer_id' as it's not needed for modeling
train = train.drop('customer_id', axis=1)
test = test.drop('customer_id', axis=1)

# Identify categorical columns
categorical_cols = train.select_dtypes(include='object').columns.tolist()

# OneHot Encoding for categorical features
train = pd.get_dummies(train, columns=categorical_cols, dummy_na=False)
test = pd.get_dummies(test, columns=categorical_cols, dummy_na=False)

# Ensure consistent columns between train and test after one-hot encoding
train_cols = list(train.columns)
test_cols = list(test.columns)

missing_in_test = set(train_cols) - set(test_cols)
for c in missing_in_test:
    test[c] = 0

missing_in_train = set(test_cols) - set(train_cols)
for c in missing_in_train:
    train[c] = 0

train = train[sorted(train_cols)]
test = test[sorted(test_cols)]


# 검증
from sklearn.model_selection import train_test_split
X_tr, X_val, y_tr, y_val = train_test_split(train, target, test_size=0.2, random_state=0)
print(X_tr.shape, X_val.shape, y_tr.shape, y_val.shape)

# 머신러닝
from sklearn.ensemble import RandomForestClassifier
rf = RandomForestClassifier(random_state=0)
rf.fit(X_tr, y_tr)
pred = rf.predict(X_val)

# 평가
from sklearn.metrics import roc_auc_score
auc = roc_auc_score(y_val, pred,)
print(auc)

# 오리지날 코드
import pandas as pd
train=pd.read_csv('train (Netflix).csv')
test=pd.read_csv('test (Netflix).csv')

## EDA
print('========데이터 크기=====')
print(train.shape,test.shape)

print('\n=====데이터 정보====')
print(train.info())

print('\n======타겟 빈도수====')
print(train['churned'].value_counts())

# 전처리
target=train.pop('churned')

train=pd.get_dummies(train)
test=pd.get_dummies(test)
## 여기에 OneHot인코딩과 Label인코딩을 넣어줘

#검증
from sklearn.model_selection import train_test_split
X_tr,X_val,y_tr,y_val= train_test_split(train,target,test_size=0.2,random_state=0)
print(X_tr.shape,X_val.shape,y_tr.shape,y_val.shape)

#머신러닝
from sklearn.ensemble import RandomForestClassifier
rf=RandomForestClassifier(random_state=0)
rf.fit(X_tr,y_tr)
pred=rf.predict(X_val)

# 평가
from sklearn.metrics import roc_auc_score
auc=roc_auc_score(y_val,pred,)
print(auc)

